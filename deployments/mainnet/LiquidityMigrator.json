{
  "address": "0x2298f3960369fe07355C9750AB6813EAd5Fe1fDB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_leftoverRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "leftoverRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router",
          "name": "routerFrom",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router",
          "name": "routerTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "migrateLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x36a9061dd73529b9159146fa221f6b8a30a05ce1feca348c6b191aebdb8dfed1",
  "receipt": {
    "to": null,
    "from": "0xBa9ebdC5054A206b3D54D7cb7E7a5ABd2810F6fe",
    "contractAddress": "0x2298f3960369fe07355C9750AB6813EAd5Fe1fDB",
    "transactionIndex": 233,
    "gasUsed": "887657",
    "logsBloom": "0x
    "blockHash": "0xa51bb32b104636784921b002e6bf61ffdbc34c8aa0d116dc96d48824b9b64a8b",
    "transactionHash": "0x36a9061dd73529b9159146fa221f6b8a30a05ce1feca348c6b191aebdb8dfed1",
    "logs": [],
    "blockNumber": 13843144,
    "cumulativeGasUsed": "29941781",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xDe50fb295549EdA934D222e7a24d5A8dd132444F"],
  "solcInputHash": "7b603a64fce96faae6b9d89c9f4693d6",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_leftoverRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"leftoverRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"routerFrom\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"routerTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"migrateLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"migrateLP(address,address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Migrate LP and pair with new OHM\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/migrator/Migrator.sol\":\"LiquidityMigrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/migrator/Migrator.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.7.5;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IUniswapV2Router {\\n  function swapExactTokensForTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n\\n  function addLiquidity(\\n    address tokenA,\\n    address tokenB,\\n    uint256 amountADesired,\\n    uint256 amountBDesired,\\n    uint256 amountAMin,\\n    uint256 amountBMin,\\n    address to,\\n    uint256 deadline\\n  )\\n    external\\n    returns (\\n      uint256 amountA,\\n      uint256 amountB,\\n      uint256 liquidity\\n    );\\n\\n  function removeLiquidity(\\n    address tokenA,\\n    address tokenB,\\n    uint256 liquidity,\\n    uint256 amountAMin,\\n    uint256 amountBMin,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256 amountA, uint256 amountB);\\n}\\n\\ninterface ITreasury {\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256);\\n\\n  function withdraw(uint256 _amount, address _token) external;\\n\\n  function tokenValue(address _token, uint256 _amount)\\n    external\\n    view\\n    returns (uint256 value_);\\n\\n  function mint(address _recipient, uint256 _amount) external;\\n\\n  function manage(address _token, uint256 _amount) external;\\n\\n  function incurDebt(uint256 amount_, address token_) external;\\n\\n  function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n  function excessReserves() external view returns (uint256);\\n\\n  function baseSupply() external view returns (uint256);\\n}\\n\\ninterface IMigrator {\\n  enum TYPE {\\n    UNSTAKED,\\n    STAKED,\\n    WRAPPED\\n  }\\n\\n  // migrate OHMv1, sOHMv1, or wsOHM for OHMv2, sOHMv2, or gOHM\\n  function migrate(\\n    uint256 _amount,\\n    TYPE _from,\\n    TYPE _to\\n  ) external;\\n}\\n\\ncontract LiquidityMigrator {\\n  using SafeERC20 for IERC20;\\n  using SafeMath for uint256;\\n\\n  address public policy;\\n  address public leftoverRecipient;\\n\\n  ITreasury internal immutable treasury =\\n    ITreasury(0x873ad91fA4F2aA0d557C0919eC3F6c9D240cDd05);\\n\\n  IERC20 internal immutable oldOHM =\\n    IERC20(0x383518188C0C6d7730D91b2c03a03C837814a899);\\n\\n  IERC20 internal immutable newOHM =\\n    IERC20(0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5);\\n\\n  IMigrator internal immutable migrator =\\n    IMigrator(0x184f3FAd8618a6F458C16bae63F70C426fE784B3);\\n\\n  constructor(address _leftoverRecipient) public {\\n    policy = msg.sender;\\n    leftoverRecipient = _leftoverRecipient;\\n  }\\n\\n  modifier onlyPolicy() {\\n    require(msg.sender == policy, \\\"!policy\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Migrate LP and pair with new OHM\\n   */\\n  function migrateLP(\\n    address pair,\\n    IUniswapV2Router routerFrom,\\n    IUniswapV2Router routerTo,\\n    address token,\\n    uint256 _minA,\\n    uint256 _minB,\\n    uint256 _deadline\\n  ) external onlyPolicy {\\n    // Since we are adding liquidity, any existing balance should be excluded\\n    uint256 initialNewOHMBalance = newOHM.balanceOf(address(this));\\n    // Fetch the treasury balance of the given liquidity pair\\n    uint256 oldLPAmount = IERC20(pair).balanceOf(address(treasury));\\n    treasury.manage(pair, oldLPAmount);\\n\\n    // Remove the V1 liquidity\\n    IERC20(pair).approve(address(routerFrom), oldLPAmount);\\n\\n    (uint256 amountToken, uint256 amountOHM) = routerFrom.removeLiquidity(\\n      token,\\n      address(oldOHM),\\n      oldLPAmount,\\n      _minA,\\n      _minB,\\n      address(this),\\n      _deadline\\n    );\\n\\n    // Migrate the V1 OHM to V2 OHM\\n    oldOHM.approve(address(migrator), amountOHM);\\n    migrator.migrate(\\n      amountOHM,\\n      IMigrator.TYPE.UNSTAKED,\\n      IMigrator.TYPE.UNSTAKED\\n    );\\n    uint256 amountNewOHM = newOHM.balanceOf(address(this)).sub(\\n      initialNewOHMBalance\\n    ); // # V1 out != # V2 in\\n\\n    // Add the V2 liquidity\\n    IERC20(token).approve(address(routerTo), amountToken);\\n    newOHM.approve(address(routerTo), amountNewOHM);\\n\\n    routerTo.addLiquidity(\\n      token,\\n      address(newOHM),\\n      amountToken,\\n      amountNewOHM,\\n      amountToken,\\n      amountNewOHM,\\n      address(treasury),\\n      _deadline\\n    );\\n\\n    // Send any leftover balance to the governor\\n    newOHM.safeTransfer(leftoverRecipient, newOHM.balanceOf(address(this)));\\n    oldOHM.safeTransfer(leftoverRecipient, oldOHM.balanceOf(address(this)));\\n\\n    IERC20(token).safeTransfer(\\n      leftoverRecipient,\\n      IERC20(token).balanceOf(address(this))\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0x87dbd83f9de3981b18d6f39a1725fa3b75bf83fca962951bb24469b3343f5c57\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630505c8c9146100465780637aed5b461461006a578063bcdd6704146100be575b600080fd5b61004e6100c6565b604080516001600160a01b039092168252519081900360200190f35b6100bc600480360360e081101561008057600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a08101359060c001356100d5565b005b61004e610a6c565b6000546001600160a01b031681565b6000546001600160a01b0316331461011e576040805162461bcd60e51b815260206004820152600760248201526621706f6c69637960c81b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d60208110156101b757600080fd5b5051604080516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529151929350600092918b16916370a0823191602480820192602092909190829003018186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d602081101561025357600080fd5b50516040805162b0eee360e41b81526001600160a01b038c811660048301526024820184905291519293507f000000000000000000000000000000000000000000000000000000000000000090911691630b0eee309160448082019260009290919082900301818387803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b50505050886001600160a01b031663095ea7b389836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561033957600080fd5b505af115801561034d573d6000803e3d6000fd5b505050506040513d602081101561036357600080fd5b505060408051635d5155ef60e11b81526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526044820184905260648201889052608482018790523060a483015260c4820186905282516000938493928d169263baa2abde9260e4808301939282900301818787803b1580156103fa57600080fd5b505af115801561040e573d6000803e3d6000fd5b505050506040513d604081101561042457600080fd5b5080516020918201516040805163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905291519396509194507f0000000000000000000000000000000000000000000000000000000000000000169263095ea7b3926044808401938290030181600087803b1580156104bf57600080fd5b505af11580156104d3573d6000803e3d6000fd5b505050506040513d60208110156104e957600080fd5b505060408051630232f83960e11b8152600481018390526000602482018190526044820181905291516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692630465f072926064808201939182900301818387803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050600061061c857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b505050506040513d602081101561061457600080fd5b505190610a7b565b9050886001600160a01b031663095ea7b38b856040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561067557600080fd5b505af1158015610689573d6000803e3d6000fd5b505050506040513d602081101561069f57600080fd5b50506040805163095ea7b360e01b81526001600160a01b038c811660048301526024820184905291517f00000000000000000000000000000000000000000000000000000000000000009092169163095ea7b3916044808201926020929091908290030181600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b505050506040513d602081101561073f57600080fd5b50506040805162e8e33760e81b81526001600160a01b038b811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201869052606482018490526084820186905260a482018490527f0000000000000000000000000000000000000000000000000000000000000000811660c483015260e482018990529151918c169163e8e3370091610104808201926060929091908290030181600087803b15801561080057600080fd5b505af1158015610814573d6000803e3d6000fd5b505050506040513d606081101561082a57600080fd5b5050600154604080516370a0823160e01b815230600482015290516108fd926001600160a01b03908116927f0000000000000000000000000000000000000000000000000000000000000000909116916370a0823191602480820192602092909190829003018186803b1580156108a057600080fd5b505afa1580156108b4573d6000803e3d6000fd5b505050506040513d60208110156108ca57600080fd5b50516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610ac4565b600154604080516370a0823160e01b815230600482015290516109ce926001600160a01b03908116927f0000000000000000000000000000000000000000000000000000000000000000909116916370a0823191602480820192602092909190829003018186803b15801561097157600080fd5b505afa158015610985573d6000803e3d6000fd5b505050506040513d602081101561099b57600080fd5b50516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610ac4565b600154604080516370a0823160e01b81523060048201529051610a5e926001600160a01b0390811692908d16916370a0823191602480820192602092909190829003018186803b158015610a2157600080fd5b505afa158015610a35573d6000803e3d6000fd5b505050506040513d6020811015610a4b57600080fd5b50516001600160a01b038c169190610ac4565b505050505050505050505050565b6001546001600160a01b031681565b6000610abd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b1b565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b16908490610bb2565b505050565b60008184841115610baa5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b6f578181015183820152602001610b57565b50505050905090810190601f168015610b9c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6060610c07826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c639092919063ffffffff16565b805190915015610b1657808060200190516020811015610c2657600080fd5b5051610b165760405162461bcd60e51b815260040180806020018281038252602a815260200180610dee602a913960400191505060405180910390fd5b6060610c728484600085610c7a565b949350505050565b6060610c8585610de7565b610cd6576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610d155780518252601f199092019160209182019101610cf6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610d77576040519150601f19603f3d011682016040523d82523d6000602084013e610d7c565b606091505b50915091508115610d90579150610c729050565b805115610da05780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610b6f578181015183820152602001610b57565b3b15159056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122006699a48a9297884eb650b7821b5c1f59618b76c2a4964c959c077ac0415778c64736f6c63430007050033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "migrateLP(address,address,address,address,uint256,uint256,uint256)": {
        "notice": "Migrate LP and pair with new OHM"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 568,
        "contract": "contracts/migrator/Migrator.sol:LiquidityMigrator",
        "label": "policy",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 570,
        "contract": "contracts/migrator/Migrator.sol:LiquidityMigrator",
        "label": "leftoverRecipient",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}
