{
  "address": "0x1B9D88A4e0f6194715a052180bf89D43f82Be5Dd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "clearDelegateSnapshotVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unlockTime",
          "type": "uint256"
        }
      ],
      "name": "createLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gaugeController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_unlockTime",
          "type": "uint256"
        }
      ],
      "name": "increaseUnlockTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "setDelegateSnapshotVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gaugeController",
          "type": "address"
        }
      ],
      "name": "setGaugeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newYieldDistributor",
          "type": "address"
        }
      ],
      "name": "setYieldDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "snapshotDelegationRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "veFXS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gauge",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "voteGaugeWeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldDistributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2fa1631b2a941279a5675c0f8aeb132f06086d47d37f6dd3992fa3b9db72132c",
  "receipt": {
    "to": null,
    "from": "0xBa9ebdC5054A206b3D54D7cb7E7a5ABd2810F6fe",
    "contractAddress": "0x1B9D88A4e0f6194715a052180bf89D43f82Be5Dd",
    "transactionIndex": 97,
    "gasUsed": "1258534",
    "logsBloom": "0x
    "blockHash": "0x4f33858ea39145692fc0ab17215b713a12db31a06fb14dd05bb63aab7aac4f9d",
    "transactionHash": "0x2fa1631b2a941279a5675c0f8aeb132f06086d47d37f6dd3992fa3b9db72132c",
    "logs": [],
    "blockNumber": 13823275,
    "cumulativeGasUsed": "8138530",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x873ad91fA4F2aA0d557C0919eC3F6c9D240cDd05"
  ],
  "solcInputHash": "01d785cca85a95831aee1841568ef1cf",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"clearDelegateSnapshotVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"createLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"increaseUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegateSnapshotVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gaugeController\",\"type\":\"address\"}],\"name\":\"setGaugeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newYieldDistributor\",\"type\":\"address\"}],\"name\":\"setYieldDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotDelegationRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veFXS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"voteGaugeWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/allocators/FxsAllocator.sol\":\"FxsAllocator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/allocators/FxsAllocator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IveFXS {\\n  struct LockedBalance {\\n    int128 amount;\\n    uint256 end;\\n  }\\n\\n  function commit_transfer_ownership(address addr) external;\\n\\n  function apply_transfer_ownership() external;\\n\\n  function commit_smart_wallet_checker(address addr) external;\\n\\n  function apply_smart_wallet_checker() external;\\n\\n  function toggleEmergencyUnlock() external;\\n\\n  function recoverERC20(address token_addr, uint256 amount) external;\\n\\n  function get_last_user_slope(address addr) external view returns (int128);\\n\\n  function user_point_history__ts(address _addr, uint256 _idx)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function locked__end(address _addr) external view returns (uint256);\\n\\n  function checkpoint() external;\\n\\n  function deposit_for(address _addr, uint256 _value) external;\\n\\n  function create_lock(uint256 _value, uint256 _unlock_time) external;\\n\\n  function increase_amount(uint256 _value) external;\\n\\n  function increase_unlock_time(uint256 _unlock_time) external;\\n\\n  function withdraw() external;\\n\\n  function balanceOf(address addr) external view returns (uint256);\\n\\n  function balanceOf(address addr, uint256 _t) external view returns (uint256);\\n\\n  function balanceOfAt(address addr, uint256 _block)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function totalSupply(uint256 t) external view returns (uint256);\\n\\n  function totalSupplyAt(uint256 _block) external view returns (uint256);\\n\\n  function totalFXSSupply() external view returns (uint256);\\n\\n  function totalFXSSupplyAt(uint256 _block) external view returns (uint256);\\n\\n  function changeController(address _newController) external;\\n\\n  function token() external view returns (address);\\n\\n  function supply() external view returns (uint256);\\n\\n  function locked(address addr) external view returns (LockedBalance memory);\\n\\n  function epoch() external view returns (uint256);\\n\\n  function point_history(uint256 arg0)\\n    external\\n    view\\n    returns (\\n      int128 bias,\\n      int128 slope,\\n      uint256 ts,\\n      uint256 blk,\\n      uint256 fxs_amt\\n    );\\n\\n  function user_point_history(address arg0, uint256 arg1)\\n    external\\n    view\\n    returns (\\n      int128 bias,\\n      int128 slope,\\n      uint256 ts,\\n      uint256 blk,\\n      uint256 fxs_amt\\n    );\\n\\n  function user_point_epoch(address arg0) external view returns (uint256);\\n\\n  function slope_changes(uint256 arg0) external view returns (int128);\\n\\n  function controller() external view returns (address);\\n\\n  function transfersEnabled() external view returns (bool);\\n\\n  function emergencyUnlockActive() external view returns (bool);\\n\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function version() external view returns (string memory);\\n\\n  function decimals() external view returns (uint256);\\n\\n  function future_smart_wallet_checker() external view returns (address);\\n\\n  function smart_wallet_checker() external view returns (address);\\n\\n  function admin() external view returns (address);\\n\\n  function future_admin() external view returns (address);\\n}\\n\\ninterface IYieldDistributor {\\n  function getYield() external returns (uint256);\\n\\n  function checkpoint() external;\\n}\\n\\ninterface IFraxGaugeController {\\n  function vote_for_gauge_weights(address, uint256) external;\\n}\\n\\ninterface IDelegateRegistry {\\n  function setDelegate(bytes32 id, address delegate) external;\\n\\n  function clearDelegate(bytes32 id) external;\\n}\\n\\ninterface ITreasury {\\n  function manage(address _token, uint256 _amount) external;\\n\\n  function updateReserve(address _token, uint256 _amount) external;\\n}\\n\\ncontract FxsAllocator {\\n  using SafeERC20 for IERC20;\\n  using Address for address;\\n  using SafeMath for uint256;\\n\\n  address public policy;\\n  address public treasury;\\n\\n  address public constant fxs =\\n    address(0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0);\\n\\n  address public constant veFXS =\\n    address(0xc8418aF6358FFddA74e09Ca9CC3Fe03Ca6aDC5b0);\\n\\n  address public yieldDistributor =\\n    address(0xc6764e58b36e26b08Fd1d2AeD4538c02171fA872);\\n\\n  address public gaugeController =\\n    address(0x44ade9AA409B0C29463fF7fcf07c9d3c939166ce);\\n\\n  address public snapshotDelegationRegistry =\\n    address(0x469788fE6E9E9681C6ebF3bF78e7Fd26Fc015446);\\n\\n  constructor(address _treasury) public {\\n    policy = msg.sender;\\n    treasury = _treasury;\\n  }\\n\\n  modifier onlyPolicy() {\\n    require(msg.sender == policy, \\\"!policy\\\");\\n    _;\\n  }\\n\\n  function deposit(uint256 _amount) external onlyPolicy {\\n    ITreasury(treasury).manage(fxs, _amount);\\n    increaseAmount(_amount);\\n  }\\n\\n  function withdraw() external onlyPolicy {\\n    IYieldDistributor(yieldDistributor).getYield();\\n    IveFXS(veFXS).withdraw();\\n\\n    uint256 amount = IERC20(fxs).balanceOf(address(this));\\n    IERC20(fxs).safeTransfer(treasury, amount);\\n  }\\n\\n  function createLock(uint256 _value, uint256 _unlockTime) external onlyPolicy {\\n    IERC20(fxs).approve(veFXS, 0);\\n    IERC20(fxs).approve(veFXS, _value);\\n    IveFXS(veFXS).create_lock(_value, _unlockTime);\\n    IYieldDistributor(yieldDistributor).checkpoint();\\n  }\\n\\n  function increaseAmount(uint256 _value) internal {\\n    IERC20(fxs).approve(veFXS, 0);\\n    IERC20(fxs).approve(veFXS, _value);\\n    IveFXS(veFXS).increase_amount(_value);\\n    IYieldDistributor(yieldDistributor).checkpoint();\\n  }\\n\\n  function increaseUnlockTime(uint256 _unlockTime) external onlyPolicy {\\n    IveFXS(veFXS).increase_unlock_time(_unlockTime);\\n    IYieldDistributor(yieldDistributor).checkpoint();\\n  }\\n\\n  function claimRewards() external onlyPolicy {\\n    IYieldDistributor(yieldDistributor).getYield();\\n    increaseAmount(IERC20(fxs).balanceOf(address(this)));\\n  }\\n\\n  function voteGaugeWeight(address _gauge, uint256 _weight)\\n    external\\n    onlyPolicy\\n  {\\n    IFraxGaugeController(gaugeController).vote_for_gauge_weights(\\n      _gauge,\\n      _weight\\n    );\\n  }\\n\\n  function setDelegateSnapshotVoting(bytes32 _id, address _delegate)\\n    external\\n    onlyPolicy\\n  {\\n    IDelegateRegistry(snapshotDelegationRegistry).setDelegate(_id, _delegate);\\n  }\\n\\n  function clearDelegateSnapshotVoting(bytes32 _id) external onlyPolicy {\\n    IDelegateRegistry(snapshotDelegationRegistry).clearDelegate(_id);\\n  }\\n\\n  function setGovernance(address _policy) external onlyPolicy {\\n    policy = _policy;\\n  }\\n\\n  function setTreasury(address _treasury) external onlyPolicy {\\n    treasury = _treasury;\\n  }\\n\\n  function setYieldDistributor(address _newYieldDistributor)\\n    external\\n    onlyPolicy\\n  {\\n    yieldDistributor = _newYieldDistributor;\\n  }\\n\\n  function setGaugeController(address _gaugeController) external onlyPolicy {\\n    gaugeController = _gaugeController;\\n  }\\n\\n  function execute(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external onlyPolicy returns (bool, bytes memory) {\\n    (bool success, bytes memory result) = to.call{value: value}(data);\\n    return (success, result);\\n  }\\n}\\n\",\"keccak256\":\"0x582820967d9902b8ae341a7d0430659a35924c3860673cc24e08cb2ebe322ff5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600280546001600160a01b031990811673c6764e58b36e26b08fd1d2aed4538c02171fa872179091556003805482167344ade9aa409b0c29463ff7fcf07c9d3c939166ce1790556004805490911673469788fe6e9e9681c6ebf3bf78e7fd26fc01544617905534801561007657600080fd5b506040516114bf3803806114bf833981016040819052610095916100c8565b60008054336001600160a01b031991821617909155600180549091166001600160a01b03929092169190911790556100f6565b6000602082840312156100d9578081fd5b81516001600160a01b03811681146100ef578182fd5b9392505050565b6113ba806101056000396000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c80637c616fe6116100ad578063ab033ea911610071578063ab033ea914610202578063b52c05fe14610215578063b61d27f614610228578063b6b55f2514610249578063f0f442601461025c5761012b565b80637c616fe6146101c45780637d423446146101d75780638a6e0b8b146101df57806399eecb3b146101f2578063a38c2c3d146101fa5761012b565b80633ccfd60b116100f45780633ccfd60b146101865780635d7e9bcb1461018e578063608f37fc146101a157806361d027b3146101a95780637335c701146101b15761012b565b806291d2b8146101305780630505c8c91461014557806319ff52fd146101635780633038a60d1461016b578063372500ab1461017e575b600080fd5b61014361013e366004611069565b61026f565b005b61014d6102c4565b60405161015a9190611229565b60405180910390f35b61014d6102d3565b610143610179366004611069565b6102eb565b610143610337565b61014361047c565b61014361019c36600461108a565b610652565b61014d6106e4565b61014d6106f3565b6101436101bf36600461116d565b610702565b6101436101d2366004611155565b61075d565b61014d61085b565b6101436101ed366004611155565b610873565b61014d6108e6565b61014d6108f5565b610143610210366004611069565b610904565b6101436102233660046111b0565b610950565b61023b6102363660046110b3565b610b76565b60405161015a929190611256565b610143610257366004611155565b610c15565b61014361026a366004611069565b610cbf565b6000546001600160a01b031633146102a25760405162461bcd60e51b8152600401610299906112a4565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031681565b73c8418af6358ffdda74e09ca9cc3fe03ca6adc5b081565b6000546001600160a01b031633146103155760405162461bcd60e51b8152600401610299906112a4565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103615760405162461bcd60e51b8152600401610299906112a4565b600260009054906101000a90046001600160a01b03166001600160a01b0316637c2628716040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156103b157600080fd5b505af11580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190611198565b506040516370a0823160e01b815261047a90733432b6a60d23ca0dfca7761b7ab56459d9c964d0906370a0823190610425903090600401611229565b60206040518083038186803b15801561043d57600080fd5b505afa158015610451573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104759190611198565b610d0b565b565b6000546001600160a01b031633146104a65760405162461bcd60e51b8152600401610299906112a4565b600260009054906101000a90046001600160a01b03166001600160a01b0316637c2628716040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190611198565b5073c8418af6358ffdda74e09ca9cc3fe03ca6adc5b06001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b50506040516370a0823160e01b815260009250733432b6a60d23ca0dfca7761b7ab56459d9c964d091506370a08231906105d0903090600401611229565b60206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611198565b60015490915061064f90733432b6a60d23ca0dfca7761b7ab56459d9c964d0906001600160a01b031683610e83565b50565b6000546001600160a01b0316331461067c5760405162461bcd60e51b8152600401610299906112a4565b600354604051631ae26c6560e31b81526001600160a01b039091169063d7136328906106ae908590859060040161123d565b600060405180830381600087803b1580156106c857600080fd5b505af11580156106dc573d6000803e3d6000fd5b505050505050565b6004546001600160a01b031681565b6001546001600160a01b031681565b6000546001600160a01b0316331461072c5760405162461bcd60e51b8152600401610299906112a4565b600480546040516317b0dca160e31b81526001600160a01b039091169163bd86e508916106ae91869186910161127a565b6000546001600160a01b031633146107875760405162461bcd60e51b8152600401610299906112a4565b6040516377fbd30960e11b815273c8418af6358ffdda74e09ca9cc3fe03ca6adc5b09063eff7a612906107be908490600401611271565b600060405180830381600087803b1580156107d857600080fd5b505af11580156107ec573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b031663c2c4c5c16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b5050505050565b733432b6a60d23ca0dfca7761b7ab56459d9c964d081565b6000546001600160a01b0316331461089d5760405162461bcd60e51b8152600401610299906112a4565b6004805460405163785f6df160e11b81526001600160a01b039091169163f0bedbe2916108cc91859101611271565b600060405180830381600087803b15801561084057600080fd5b6003546001600160a01b031681565b6002546001600160a01b031681565b6000546001600160a01b0316331461092e5760405162461bcd60e51b8152600401610299906112a4565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461097a5760405162461bcd60e51b8152600401610299906112a4565b60405163095ea7b360e01b8152733432b6a60d23ca0dfca7761b7ab56459d9c964d09063095ea7b3906109c89073c8418af6358ffdda74e09ca9cc3fe03ca6adc5b09060009060040161123d565b602060405180830381600087803b1580156109e257600080fd5b505af11580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a9190611135565b5060405163095ea7b360e01b8152733432b6a60d23ca0dfca7761b7ab56459d9c964d09063095ea7b390610a689073c8418af6358ffdda74e09ca9cc3fe03ca6adc5b090869060040161123d565b602060405180830381600087803b158015610a8257600080fd5b505af1158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190611135565b506040516365fc387360e01b815273c8418af6358ffdda74e09ca9cc3fe03ca6adc5b0906365fc387390610af49085908590600401611346565b600060405180830381600087803b158015610b0e57600080fd5b505af1158015610b22573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b031663c2c4c5c16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106c857600080fd5b600080546060906001600160a01b03163314610ba45760405162461bcd60e51b8152600401610299906112a4565b60006060876001600160a01b0316878787604051610bc39291906111fd565b60006040518083038185875af1925050503d8060008114610c00576040519150601f19603f3d011682016040523d82523d6000602084013e610c05565b606091505b5090999098509650505050505050565b6000546001600160a01b03163314610c3f5760405162461bcd60e51b8152600401610299906112a4565b60015460405162b0eee360e41b81526001600160a01b0390911690630b0eee3090610c8490733432b6a60d23ca0dfca7761b7ab56459d9c964d090859060040161123d565b600060405180830381600087803b158015610c9e57600080fd5b505af1158015610cb2573d6000803e3d6000fd5b5050505061064f81610d0b565b6000546001600160a01b03163314610ce95760405162461bcd60e51b8152600401610299906112a4565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60405163095ea7b360e01b8152733432b6a60d23ca0dfca7761b7ab56459d9c964d09063095ea7b390610d599073c8418af6358ffdda74e09ca9cc3fe03ca6adc5b09060009060040161123d565b602060405180830381600087803b158015610d7357600080fd5b505af1158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab9190611135565b5060405163095ea7b360e01b8152733432b6a60d23ca0dfca7761b7ab56459d9c964d09063095ea7b390610df99073c8418af6358ffdda74e09ca9cc3fe03ca6adc5b090859060040161123d565b602060405180830381600087803b158015610e1357600080fd5b505af1158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611135565b50604051631255d9df60e21b815273c8418af6358ffdda74e09ca9cc3fe03ca6adc5b090634957677c906107be908490600401611271565b610ed98363a9059cbb60e01b8484604051602401610ea292919061123d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ede565b505050565b6060610f33826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f6d9092919063ffffffff16565b805190915015610ed95780806020019051810190610f519190611135565b610ed95760405162461bcd60e51b8152600401610299906112fc565b6060610f7c8484600085610f84565b949350505050565b6060610f8f85611048565b610fab5760405162461bcd60e51b8152600401610299906112c5565b60006060866001600160a01b03168587604051610fc8919061120d565b60006040518083038185875af1925050503d8060008114611005576040519150601f19603f3d011682016040523d82523d6000602084013e61100a565b606091505b5091509150811561101e579150610f7c9050565b80511561102e5780518082602001fd5b8360405162461bcd60e51b81526004016102999190611291565b803b15155b919050565b80356001600160a01b038116811461104d57600080fd5b60006020828403121561107a578081fd5b61108382611052565b9392505050565b6000806040838503121561109c578081fd5b6110a583611052565b946020939093013593505050565b600080600080606085870312156110c8578182fd5b6110d185611052565b935060208501359250604085013567ffffffffffffffff808211156110f4578384fd5b818701915087601f830112611107578384fd5b813581811115611115578485fd5b886020828501011115611126578485fd5b95989497505060200194505050565b600060208284031215611146578081fd5b81518015158114611083578182fd5b600060208284031215611166578081fd5b5035919050565b6000806040838503121561117f578182fd5b8235915061118f60208401611052565b90509250929050565b6000602082840312156111a9578081fd5b5051919050565b600080604083850312156111c2578182fd5b50508035926020909101359150565b600081518084526111e9816020860160208601611354565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6000825161121f818460208701611354565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6000831515825260406020830152610f7c60408301846111d1565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006020825261108360208301846111d1565b60208082526007908201526621706f6c69637960c81b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b918252602082015260400190565b60005b8381101561136f578181015183820152602001611357565b8381111561137e576000848401525b5050505056fea26469706673582212208fdc4fd7c3607ad65ab79ca0fff486f792f2f8d13e5144c904ed5376d8eeec4864736f6c63430007050033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 742,
        "contract": "contracts/allocators/FxsAllocator.sol:FxsAllocator",
        "label": "policy",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 744,
        "contract": "contracts/allocators/FxsAllocator.sol:FxsAllocator",
        "label": "treasury",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 762,
        "contract": "contracts/allocators/FxsAllocator.sol:FxsAllocator",
        "label": "yieldDistributor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 768,
        "contract": "contracts/allocators/FxsAllocator.sol:FxsAllocator",
        "label": "gaugeController",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 774,
        "contract": "contracts/allocators/FxsAllocator.sol:FxsAllocator",
        "label": "snapshotDelegationRegistry",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}